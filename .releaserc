# This file represents the configuration for generating releases
plugins: [
  '@semantic-release/commit-analyzer',
  '@semantic-release/release-notes-generator',
  '@semantic-release/npm',
  '@semantic-release/github',
  '@semantic-release/changelog',
  '@semantic-release/git'
]

branches: ['develop', {name: 'hotfix', prerelease: true}]
ci: true
debug: true
dryRun: false

# Release Tagging format
tagFormat: 'v${version}'

preset: 'conventionalcommits'

verifyConditions:
  - '@semantic-release/changelog'
  - '@semantic-release/git'
  - '@semantic-release/github'

# Analyze and decide type of release
# Type represents the commit message keyword
analyzeCommits:
  - path: '@semantic-release/commit-analyzer'
    releaseRules:
    - type: "fix"
      release: false
    - type: "feat"
      release: false
    - type: "hotfix"
      release: "patch"
    - type: "patch"
      release: "patch"
    - type: "minor"
      release: "minor"
    - type: "breaking"
      release: "major"
    - type: "major"
      release: "major"

generateNotes:
  - path: '@semantic-release/release-notes-generator'
    writerOpts:
      commitsSort: 'header'
      groupBy: 'type'
      commitGroupsSort: 'title'
    parserOpts:
      noteKeywords: ["major", "minor", "patch"]
    types:
      - type: "hotfix"
      - type: "minor"
      - type: "major"
      - type: "fix"

# Responsible for preparing the release
# - creating or updating files
# -- such as package.json, CHANGELOG.md, documentation or compiled assets
# - pushing a commit.
prepare:
  - path: '@semantic-release/changelog'
  - path: '@semantic-release/git'
    message: 'RELEASE: v${nextRelease.version}'
    assets: ['CHANGELOG.md']

# Publish as a GitHub release
publish:
  - path: '@semantic-release/github'

success: false
fail: false
